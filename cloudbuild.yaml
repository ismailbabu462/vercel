# Google Cloud Build configuration for FastAPI application
# This file automates the build, push, and deploy process to Cloud Run

steps:
  # Step 1: Build Docker image from Dockerfile in project root
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${BUILD_ID}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:latest',
      '-f', 'backend/Dockerfile',
      'backend'
    ]
    id: 'build-image'

  # Step 2: Push the built image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${BUILD_ID}'
    ]
    id: 'push-image-sha'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:latest'
    ]
    id: 'push-image-latest'
    waitFor: ['build-image']

  # Step 3: Deploy to Cloud Run service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${BUILD_ID}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8001',
      '--memory', '2Gi',
      '--cpu', '2',
      '--min-instances', '0',
      '--max-instances', '10',
      '--concurrency', '100',
      '--timeout', '300',
      '--set-env-vars', 'ENVIRONMENT=production',
      '--set-env-vars', 'CORS_ORIGINS="https://pentorasecbeta.mywire.org"',
      '--set-env-vars', 'OLLAMA_URL=${_OLLAMA_URL}',
      '--set-env-vars', 'OLLAMA_MODEL=${_OLLAMA_MODEL}',
      '--set-secrets', 'JWT_SECRET_KEY=JWT_SECRET_KEY:latest',
      '--set-secrets', 'MYSQL_DATABASE_URL=MYSQL_DATABASE_URL:latest',
      '--set-secrets', 'GEMINI_API_KEY=GEMINI_API_KEY:latest',
      '--set-secrets', 'LEMONSQUEEZY_WEBHOOK_SECRET=LEMONSQUEEZY_WEBHOOK_SECRET:latest'
    ]
    id: 'deploy-cloud-run'
    waitFor: ['push-image-sha']

# Substitution variables (can be overridden in Cloud Build trigger)
substitutions:
  _REGION: 'us-central1'
  _REPO_NAME: 'pentorasec-docker1'
  _SERVICE_NAME: 'pentorsec-api'
  _OLLAMA_URL: 'https://ollama.pentorasecbeta.mywire.org'
  _OLLAMA_MODEL: 'llama3.1'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # More powerful machine for faster builds
  diskSizeGb: 100

# Build timeout (in seconds)
timeout: '1200s'  # 20 minutes

# Images to be pushed to registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${BUILD_ID}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:latest'
